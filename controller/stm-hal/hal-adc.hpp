#pragma once

#include <cstdint>

static constexpr int16_t ADC_SAMPLE_FREQUENCY_HZ = 200;

enum ADCChannelType : uint8_t
{
    // Input PORT
    ADC_CHANNEL_TYPE_PORT_INPUT1_PIN1 = 0,
    ADC_CHANNEL_TYPE_PORT_INPUT2_PIN1,
    ADC_CHANNEL_TYPE_PORT_INPUT3_PIN1,
    ADC_CHANNEL_TYPE_PORT_INPUT4_PIN1,
    ADC_CHANNEL_TYPE_PORT_INPUT1_PIN6,
    ADC_CHANNEL_TYPE_PORT_INPUT2_PIN6,
    ADC_CHANNEL_TYPE_PORT_INPUT3_PIN6,
    ADC_CHANNEL_TYPE_PORT_INPUT4_PIN6,
    // Output PORT
    ADC_CHANNEL_TYPE_PORT_OUTPUT1_PIN5,
    ADC_CHANNEL_TYPE_PORT_OUTPUT2_PIN5,
    ADC_CHANNEL_TYPE_PORT_OUTPUT3_PIN5,
    ADC_CHANNEL_TYPE_PORT_OUTPUT4_PIN5,
    ADC_CHANNEL_TYPE_PORT_OUTPUT1_PIN6,
    ADC_CHANNEL_TYPE_PORT_OUTPUT2_PIN6,
    ADC_CHANNEL_TYPE_PORT_OUTPUT3_PIN6,
    ADC_CHANNEL_TYPE_PORT_OUTPUT4_PIN6,
    // System
    ADC_CHANNEL_TYPE_3V3_SENSE,
    ADC_CHANNEL_TYPE_5V_SENSE,
    ADC_CHANNEL_TYPE_9V_SENSE,
    ADC_CHANNEL_TYPE_VBUS_SENSE,
    ADC_CHANNEL_TYPE_VBAT_SENSE,

    ADC_CHANNEL_TOTAL
};

using FinishAdcCb = void(*)(uint16_t, void*);

void hal_adc_init_channel(const uint8_t channel, FinishAdcCb cb, void* param);
uint32_t hal_adc_get_timer_sample_frequency();